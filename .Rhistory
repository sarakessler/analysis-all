screen_size = as.numeric(jd$answers$data$screen_size))
d.raw.norm <- bind_rows(d.raw.norm, id)
}
target = c('elephant', 'hippo', 'house', 'plane','baby', 'duckling', 'gnome', 'bunny','chick', 'mouse', 'balloon', 'cake', 'monkey', 'umbrella', 'ant', 'bean', 'candy', 'hazelnut', 'earring', 'fly', 'blueberry', 'seed', 'ladybug', 'pill', 'pin', 'tack')
d.raw.norm$type[d.raw.norm$noun %in% target] <- "targ"
d.raw.norm$type[!d.raw.norm$noun %in% target] <- "control"
d.norm <- d.raw.norm %>%
filter(as.numeric(screen_size) >= 12) %>%
filter(str_detect(language, 'eng')) %>%
select(-language) %>%
group_by(subid)
d_var <- d.norm %>%
group_by(prototype_status) %>%
summarise(mean = mean(rating), sds = sd(rating))
d.norm <- d.norm %>%
left_join(d_var)%>%
mutate(dist = abs((mean - rating)/sds), excl = dist>=2)
d_people <- d.norm %>%
group_by(subid)%>%
summarise(exclusions = sum(excl)) %>%
arrange(exclusions)
d.norm<- d.norm %>%
left_join(d_people)
d_noexc <- d.norm%>%
filter(exclusions <6)%>%
filter(!excl)
length(unique(d_noexc$workerid))
d.norm.means <- d.norm %>%
filter(type=="targ")%>%
group_by(noun,condition) %>%
summarise(mean = mean(rating))
summary(d.rep)
d.rep = droplevels(d.rep)
d.rep$fac_num_checked = as.factor(as.character(d.rep$num_checked))
mean_size = d.norm.means %>%
filter(condition == 2)%>%
select(-condition)
d.rep = d.rep %>%
left_join(mean_size,by=c("noun"))
d.rep$noun = as.factor(d.rep$noun)
d.rep.are = d.rep %>%
filter(verb == "are")
load("m.rda")
load("m.norm.rda")
summary(d.bunny)
d.bunny = droplevels(d.bunny)
d.bunny$fac_num_checked = as.factor(as.character(d.bunny$num_checked))
mean_size = d.norm.means %>%
filter(condition == 2)%>%
select(-condition)
d.bunny = d.bunny %>%
left_join(mean_size,by=c("noun"))
d.bunny$noun = as.factor(d.bunny$noun)
load("m.bunny.norm.rda")
load("m.bunny.norm1.rda")
summary(d.rev)
d.rev = droplevels(d.rev)
d.rev$fac_num_checked = as.factor(as.character(d.rev$num_checked))
load("m.rev.rda")
mean_size = d.norm.means %>%
filter(condition == 1)%>%
select(-condition)
d.rev = d.rev %>%
left_join(mean_size,by=c("noun"))
load("m.rev.norm1.rda")
load("m.rev.norm.rda")
summary(d.3cond)
d.3cond = droplevels(d.3cond)
d.3cond$fac_num_checked = as.factor(as.character(d.3cond$num_checked))
mean_size = d.norm.means %>%
filter(condition == 2)%>%
select(-condition)
d.3cond = d.3cond %>%
left_join(mean_size,by=c("noun"))
d.3cond.ordphot = d.3cond %>%
filter(condition == 1)
d.3cond.ranphot = d.3cond %>%
filter(condition == 2)
d.3cond.rantiny = d.3cond %>%
filter(condition == 3)
load("m.ordphot.norm.rda")
load("m.ranphot.norm.rda")
load("m.rantiny.norm.rda")
load("m.rantiny.norm1.rda")
d.rep$protr<- d.rep$prototype_status %>%
relevel("small")
d.rep.are <- d.rep %>%
filter(verb == "are")
d.bunny$protr<- d.bunny$prototype_status %>%
relevel("small")
d.3cond.ordphot$protr <- as.factor(d.3cond.ordphot$prototype_status) %>%
relevel("small")
d.3cond.ranphot$protr <- as.factor(d.3cond.ranphot$prototype_status) %>%
relevel("small")
newcontrasts = as.matrix(data.frame("adj.SMALL.minus.BIG"=c(-1,-1,-1,1,1,1), "BIG.big.minus.other"=c(2,-1,-1,0,0,0), "BIG.neither.minus.small"=c(0,1,-1,0,0,0), "SMALL.big.minus.other"=c(0,0,0,2,-1,-1), "SMALL.neither.minus.small"=c(0,0,0,0,1,-1)))
rownames(newcontrasts) = c("BIG.big", "BIG.neither", "BIG.small", "SMALL.big", "SMALL.neither", "SMALL.small")
newcontrasts[,1] = newcontrasts[,1] *1/2
newcontrasts[,2] = newcontrasts[,2] *2/3
newcontrasts[,3] = newcontrasts[,3] *1/2
newcontrasts[,4] = newcontrasts[,4] *2/3
newcontrasts[,5] = newcontrasts[,5] *1/2
d.rep$protr<- d.rep$prototype_status %>%
relevel("small")
d.rep$adj.protr = factor(paste(toupper(d.rep$adj), d.rep$protr, sep="."))
contrasts(d.rep$adj.protr) = newcontrasts
d.rep.are <- d.rep %>%
filter(verb == "are")
d.bunny$protr<- d.bunny$prototype_status %>%
relevel("small")
d.bunny$adj.protr = factor(paste(toupper(d.bunny$adj), d.bunny$protr, sep="."))
contrasts(d.bunny$adj.protr) = newcontrasts
d.3cond.ordphot$protr <- as.factor(d.3cond.ordphot$prototype_status) %>%
relevel("small")
d.3cond.ordphot$adj.protr = factor(paste(toupper(d.3cond.ordphot$adj), d.3cond.ordphot$protr, sep="."))
contrasts(d.3cond.ordphot$adj.protr) = newcontrasts
d.3cond.ranphot$protr <- as.factor(d.3cond.ranphot$prototype_status) %>%
relevel("small")
d.3cond.ranphot$adj.protr = factor(paste(toupper(d.3cond.ranphot$adj), d.3cond.ranphot$protr, sep="."))
contrasts(d.3cond.ranphot$adj.protr) = newcontrasts
load("m.relev.newcontrasts.rda")
load("m.allvs.simp.relev.newcontrasts.rda")
load("m.bunny.relev.newcontrasts.rda")
load("m.ordphot.relev.newcontrasts.rda")
load("m.ranphot.relev.newcontrasts.rda")
d.3cond.ordphot.noall <- d.3cond.ordphot %>%
select(-all_checked)
d.imagecomp <- d.bunny %>%
select(-all_checked) %>%
union(d.3cond.ordphot.noall)
d.imagecomp$fac_num_checked = as.factor(as.character(d.imagecomp$fac_num_checked))
d.imagecomp$fac_exp_name = as.factor(as.character(d.imagecomp$exp_name))
d.imagecomp$protr<- as.factor(as.character(d.imagecomp$prototype_status)) %>%
relevel("small")
d.imagecomp$adj.protr = factor(paste(toupper(d.imagecomp$adj), d.imagecomp$protr, sep="."))
contrasts(d.imagecomp$adj.protr) = newcontrasts
load("m.imagecomp.rda")
load("m.imagecomp.simp.rda")
summary(m.relev.newcontrasts)
load("m.allvs.simp.relev.newcontrasts.rda")
summary(m.allvs.simp.relev.newcontrasts)
summary(m.bunny.relev.newcontrasts)
summary(m.ordphot.relev.newcontrasts)
summary(m.ranphot.relev.newcontrasts)
summary(m.imagecomp)
summary(m.imagecomp)
summary(m.relev.newcontrasts.wnorm)
load("m.relev.newcontrasts.wnorm.rda")
summary(m.relev.newcontrasts.wnorm)
summary(m.rev)
summary(m.rantiny)
load("m.rantiny.rda")
summary(m.rantiny)
library(reshape)
library(plyr)
library(ggplot2)
library(tidyverse)
library(lme4)
sem <- function(x) {sd(x, na.rm=TRUE) / sqrt(length(x))}
ci95 <- function(x) {sem(x) * 1.96}
setwd("D:/Dropbox/School/2015-2016/summer adj exp")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
subjScores <- read.csv("by-subj.csv")
theme_set(theme_bw(base_size = 18))
all_dat = read.csv('all-data.csv')
targs = read.csv("all-targets.csv")
over_time = data.frame(all_dat$order.heard, all_dat$category)
over_time_tab = table(over_time)
over_time_tab
# over_time_tab = as.matrix(over_time_tab)
# over_time_tab
# g1<-ggplot(over_time, aes(x=all_dat.order.heard, y=(all_dat$category=="SA"))) + geom_point(stat='identity')
# g1
targs = read.csv("all-targets.csv")
ac_age = table(targs$age.group, targs$det.cat=="AC")
ac_age
ac_age_rel = ac_age
for (i in 1:nrow(ac_age)){
ac_age_rel[i,] = ac_age[i,]/sum(ac_age[i,])
}
ac_age_rel
ac_age_rel = as.data.frame(ac_age_rel)
colnames(ac_age_rel) = c("age.group", "AC", "Freq")
#bar graph %Adult correct by age bins
ac_age_rel_t = subset(ac_age_rel, ac_age_rel$AC=='TRUE')
ac_age_rel_t
ac_age_rel_t_no2 = ac_age_rel_t[2:nrow(ac_age_rel_t),]
ac_age_rel_t_no2
g1<-ggplot(ac_age_rel_t_no2, aes(x=age.group, y=Freq)) + geom_bar(stat='identity') + ylab("Percent AC")
g1
#chi-sq test of independence - for the counts of AC vs. not Ac in each age bin
m1 = chisq.test(ac_age)
m1
sa_age = table(targs$age.group, targs$category=="SA")
sa_age
sa_age_rel = sa_age
for (i in 1:nrow(sa_age)){
sa_age_rel[i,] = sa_age[i,]/sum(sa_age[i,])
}
sa_age_rel
sa_age_rel = as.data.frame(sa_age_rel)
colnames(sa_age_rel) = c("age.group", "SA", "Freq")
sa_age_rel_t = subset(sa_age_rel, sa_age_rel$SA=='TRUE')
sa_age_rel_t
sa_age_rel_t_no2 = sa_age_rel_t[2:nrow(sa_age_rel_t),]
sa_age_rel_t_no2
det_cats = table(targs$age.group, targs$det.cat)
det_cats
det_cats_rel = det_cats
for (i in 1:nrow(det_cats)){
det_cats_rel[i,] = det_cats[i,]/sum(det_cats[i,])
}
det_cats_rel
det_cats_rel = as.data.frame(det_cats_rel)
det_cats_rel
colnames(det_cats_rel) = c("age.group", "resp.cat", "Freq")
det_cats_rel_no_2_no_other <- det_cats_rel %>%
filter(age.group!=2)%>%
filter(resp.cat!="other")
ggplot(data=det_cats_rel_no_2_no_other, aes(x=age.group, y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") + #guides(fill=guide_legend(title=NULL)) +
#ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Err"))
ggplot(data=det_cats_rel_no_2_no_other, aes(x=age.group, y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=mean_zone-cis, ymax=mean_zone+cis), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Err")), palette="YlGnBu")
ggplot(data=det_cats_rel_no_2_no_other, aes(x=age.group, y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=mean_zone-cis, ymax=mean_zone+cis), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Err"), palette="YlGnBu")
ggplot(data=det_cats_rel_no_2_no_other, aes(x=age.group, y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=(Freq*100)-cis, ymax=(Freq*100)+cis), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Err"), palette="YlGnBu")
View(det_cats_rel_no_2_no_other)
det_cats_rel_no_2_no_other$resp.cat = factor(det_cats_rel_no_2_no_other$resp.cat, levels=c("AC", "sb", "neg", "OthDim", "dk", "error"))
det_cats_rel_no_2_no_other<- det_cats_rel_no_2_no_other %>%
summarise(freq100 = (Freq*100), cis = ci95(freq100))
scores = read.csv("adj_scores.csv")
View(scores)
means_ac_scores = ddply(scores, .(pair), summarize,  mFreq=mean(adj_score_ac))
?write.csv()
write.csv(det_cats_rel_no_2_no_other,"categoryFreq.csv")
View(targs)
?tidyverse
?summerise
?summarise
detCatFreq <- targs %>%
filter(age.group,det.cat) %>%
group_by(det.cat) %>%
detCatFreq <- targs %>%
filter(age.group,det.cat) %>%
group_by(det.cat)
View(detCatFreq)
detCatFreq <- targs %>%
filter(age.group,det.cat)
targs.age.group
targs$age.group
levels(targs$age.group)
levels(as.factor(targs$age.group))
targs$age.group = as.factor(targs$age.group)
targs$det.cat = as.factor(targs$det.cat)
detCatFreq <- targs %>%
filter(age.group, det.cat)
detCatFreq <- targs %>%
select(age.group, det.cat) %>%
group_by(det.cat)
View(detCatFreq)
?filter
detCatFreq <- targs %>%
select(age.group, det.cat) %>%
group_by(det.cat,age.group)
table(detCatFreq)
?spread
targs %>%
select(age.group, det.cat) %>%
spread(det.cat, age.group)
targs %>%
select(age.group, det.cat) %>%
gather(det.cat, age.group)
targs %>%
select(age.group, det.cat) %>%
gather(age.group,det.cat)
targs %>%
select(age.group, det.cat) %>%
spread(age.group,det.cat)
length(targs$age.group[targs$age.group=="2"])
table(detCatFreq)
num2 = length(targs$age.group[targs$age.group=="2"])
num3 = length(targs$age.group[targs$age.group=="3"])
num4 = length(targs$age.group[targs$age.group=="4"])
num5 = length(targs$age.group[targs$age.group=="5"])
num7 = length(targs$age.group[targs$age.group=="7"])
detCatFreq$totalage[detCatFreq$age.group =="2"] = num2
View(detCatFreq)
detCatFreq$totalage[detCatFreq$age.group =="2"] = num2
detCatFreq$totalage[detCatFreq$age.group =="3"] = num3
detCatFreq$totalage[detCatFreq$age.group =="4"] = num4
detCatFreq$totalage[detCatFreq$age.group =="5"] = num5
detCatFreq$totalage[detCatFreq$age.group =="7"] = num7
View(detCatFreq)
View(det_cats_rel)
det_cats_rel_no2 <- det_cats_rel %>%
filter(age.group!="2")
write.csv(det_cats_rel_no_2,"categoryFreqNo2.csv")
det_cats_rel_no_2 <- det_cats_rel %>%
filter(age.group!="2")
write.csv(det_cats_rel_no_2,"categoryFreqNo2.csv")
det_cats_cis <- read.csv("categoryFreqNo2.csv")
View(det_cats_cis)
ggplot(data=det_cats_cis, aes(x=age.group, y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=(Freq*100)-cis, ymax=(Freq*100)+cis), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Err"), palette="YlGnBu")
ggplot(data=det_cats_cis, aes(x=as.factor(age.group), y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=(Freq*100)-cis, ymax=(Freq*100)+cis), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Err"), palette="YlGnBu")
ggplot(data=det_cats_cis, aes(x=as.factor(age.group), y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=(Freq*100)-(cis*100), ymax=(Freq*100)+(cis*100)), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Err"), palette="YlGnBu")
ggplot(data=det_cats_cis, aes(x=as.factor(age.group), y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=(Freq*100)-(cis*100), ymax=(Freq*100)+(cis*100)), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType", palette="YlGnBu")
det_cats_cis$resp.cat = factor(det_cats_cis$resp.cat, levels=c("AC", "sb", "neg", "OthDim", "dk", "other", "error"))
ggplot(data=det_cats_cis, aes(x=as.factor(age.group), y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=(Freq*100)-(cis*100), ymax=(Freq*100)+(cis*100)), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "other", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Other", "Error"), palette="YlGnBu")
png(filename = "figresptypesno2cis.png", width = 601, height = 373)
print(ggplot(data=det_cats_cis, aes(x=as.factor(age.group), y=Freq*100, fill=resp.cat)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
geom_errorbar(aes(ymin=(Freq*100)-(cis*100), ymax=(Freq*100)+(cis*100)), width=.2, position=position_dodge(.9)) + #guides(fill=guide_legend(title=NULL)) +
ggtitle("Response types by age group") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) +
ylab('Percent of Responses') + xlab('Age group') +
scale_fill_brewer(name="Response\nType",
breaks=c("AC", "sb", "neg", "OthDim", "dk", "other", "error"),
labels=c("AC", "SB", "Neg", "OthDim", "DK", "Other", "Error"), palette="YlGnBu"))
dev.off()
scores = read.csv("adj_scores.csv")
library(reshape)
library(plyr)
library(ggplot2)
library(tidyverse)
library(lme4)
sem <- function(x) {sd(x, na.rm=TRUE) / sqrt(length(x))}
ci95 <- function(x) {sem(x) * 1.96}
setwd("D:/Dropbox/School/2015-2016/summer adj exp")
scores = read.csv("adj_scores.csv")
head(scores)
View(scores)
?melt
?gather
means_all <- scores%>%
select(Kid.ID,pair,adj_score_ac,adj_score_sa)
View(means_all)
means_all <- scores%>%
select(Kid.ID,pair,adj_score_ac,adj_score_sa)%>%
gather(score_type,score,adj_score_ac,adj_score_sa)
View(means_all)
means_all <- scores%>%
select(Kid.ID,pair,adj_score_ac,adj_score_sa)%>%
gather(score_type,score,adj_score_ac,adj_score_sa)%>%
group_by(score_type)%>%
summarise(mean_score = mean(score))
means_all <- scores%>%
select(Kid.ID,pair,adj_score_ac,adj_score_sa)%>%
gather(score_type,score,adj_score_ac,adj_score_sa)%>%
group_by(pair,score_type)%>%
summarise(mean_score = mean(score))
means_all <- scores%>%
select(Kid.ID,pair,adj_score_ac,adj_score_sa)%>%
gather(score_type,score,adj_score_ac,adj_score_sa)%>%
group_by(pair,score_type)%>%
summarise(mean_score = mean(score),sems = sem(score), cis = ci95(score))
theme_set(theme_bw(base_size = 18))
means_all$pairf = factor(means_all$pair,
levels = c("big/small", "ht/ls", "long/short-l", "thick/thin", "old/young", "deep/shallow", "wide/narrow"),
ordered=TRUE)
ggplot(data=means_all, aes(x=pairf, y=(mean_score), fill=type)) +
geom_bar(stat = 'identity', position=position_dodge()) +
geom_errorbar(aes(ymin=mean_zone-cis, ymax=mean_zone+cis), width=.2, position=position_dodge(.9)) +
scale_fill_brewer("Greys") + guides(fill=guide_legend(title=NULL)) +  geom_text(aes(label=(round(mean_score,2))), position=position_dodge(width=0.9), vjust=1.2, colour="black") +
#ggtitle("Mean scores per adjective pair") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) + ylab('Mean Score') + xlab('Adjective Pair') + scale_x_discrete(breaks=levels(means_all$pairf),
labels=c("big/small", "high-tall/low-short", "long/short", "thick/thin", "old/young", "deep/shallow", "wide/narrow"))
ggplot(data=means_all, aes(x=pairf, y=(mean_score), fill=score_type)) +
geom_bar(stat = 'identity', position=position_dodge()) +
geom_errorbar(aes(ymin=mean_zone-cis, ymax=mean_zone+cis), width=.2, position=position_dodge(.9)) +
scale_fill_brewer("Greys") + guides(fill=guide_legend(title=NULL)) +  geom_text(aes(label=(round(mean_score,2))), position=position_dodge(width=0.9), vjust=1.2, colour="black") +
#ggtitle("Mean scores per adjective pair") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) + ylab('Mean Score') + xlab('Adjective Pair') + scale_x_discrete(breaks=levels(means_all$pairf),
labels=c("big/small", "high-tall/low-short", "long/short", "thick/thin", "old/young", "deep/shallow", "wide/narrow"))
ggplot(data=means_all, aes(x=pairf, y=(mean_score), fill=score_type)) +
geom_bar(stat = 'identity', position=position_dodge()) +
geom_errorbar(aes(ymin=mean_score-cis, ymax=mean_score+cis), width=.2, position=position_dodge(.9)) +
scale_fill_brewer("Greys") + guides(fill=guide_legend(title=NULL)) +  geom_text(aes(label=(round(mean_score,2))), position=position_dodge(width=0.9), vjust=1.2, colour="black") +
#ggtitle("Mean scores per adjective pair") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) + ylab('Mean Score') + xlab('Adjective Pair') + scale_x_discrete(breaks=levels(means_all$pairf),
labels=c("big/small", "high-tall/low-short", "long/short", "thick/thin", "old/young", "deep/shallow", "wide/narrow"))
ggplot(data=means_all, aes(x=pairf, y=(mean_score), fill=score_type)) +
geom_bar(stat = 'identity', position=position_dodge()) +
geom_errorbar(aes(ymin=mean_score-cis, ymax=mean_score+cis), width=.2, position=position_dodge(.9)) +
scale_fill_brewer("Greys") + guides(fill=guide_legend(title=NULL)) +
scale_fill_discrete(breaks=c("adj_score_ac", "adj_score_sa"),
labels=c("AC", "SA")) +  geom_text(aes(label=(round(mean_score,2))), position=position_dodge(width=0.9), vjust=1.2, colour="black") +
#ggtitle("Mean scores per adjective pair") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) + ylab('Mean Score') + xlab('Adjective Pair') + scale_x_discrete(breaks=levels(means_all$pairf),
labels=c("big/small", "high-tall/low-short", "long/short", "thick/thin", "old/young", "deep/shallow", "wide/narrow"))
png(filename = "figmeansdiss.png", width = 861, height = 576)
print(ggplot(data=means_all, aes(x=pairf, y=(mean_score), fill=score_type)) +
geom_bar(stat = 'identity', position=position_dodge()) +
geom_errorbar(aes(ymin=mean_score-cis, ymax=mean_score+cis), width=.2, position=position_dodge(.9)) +
scale_fill_brewer("Greys") + guides(fill=guide_legend(title=NULL)) +
scale_fill_discrete(breaks=c("adj_score_ac", "adj_score_sa"),
labels=c("AC", "SA")) +  geom_text(aes(label=(round(mean_score,2))), position=position_dodge(width=0.9), vjust=1.2, colour="black") +
#ggtitle("Mean scores per adjective pair") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) + ylab('Mean Score') + xlab('Adjective Pair') + scale_x_discrete(breaks=levels(means_all$pairf),
labels=c("big/small", "high-tall/low-short", "long/short", "thick/thin", "old/young", "deep/shallow", "wide/narrow")) )
dev.off()
ggplot(data=means_all, aes(x=pairf, y=(mean_score), fill=score_type)) +
geom_bar(stat = 'identity', position=position_dodge()) +
geom_errorbar(aes(ymin=mean_score-cis, ymax=mean_score+cis), width=.2, position=position_dodge(.9)) +
guides(fill=guide_legend(title=NULL)) +
scale_fill_discrete(breaks=c("adj_score_ac", "adj_score_sa"),
labels=c("AC", "SA")) +  geom_text(aes(label=(round(mean_score,2))), position=position_dodge(width=0.9), vjust=1.2, colour="black") +
#ggtitle("Mean scores per adjective pair") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) + ylab('Mean Score') + xlab('Adjective Pair') + scale_x_discrete(breaks=levels(means_all$pairf),
labels=c("big/small", "high-tall/low-short", "long/short", "thick/thin", "old/young", "deep/shallow", "wide/narrow"))
png(filename = "figmeansdiss.png", width = 861, height = 576)
print(ggplot(data=means_all, aes(x=pairf, y=(mean_score), fill=score_type)) +
geom_bar(stat = 'identity', position=position_dodge()) +
geom_errorbar(aes(ymin=mean_score-cis, ymax=mean_score+cis), width=.2, position=position_dodge(.9)) +
guides(fill=guide_legend(title=NULL)) +
scale_fill_discrete(breaks=c("adj_score_ac", "adj_score_sa"),
labels=c("AC", "SA")) +  geom_text(aes(label=(round(mean_score,2))), position=position_dodge(width=0.9), vjust=1.2, colour="black") +
#ggtitle("Mean scores per adjective pair") +
theme(plot.title = element_text(lineheight=.8, face="bold", hjust=0.5)) + ylab('Mean Score') + xlab('Adjective Pair') + scale_x_discrete(breaks=levels(means_all$pairf),
labels=c("big/small", "high-tall/low-short", "long/short", "thick/thin", "old/young", "deep/shallow", "wide/narrow")) )
dev.off()
