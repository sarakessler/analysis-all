library(tidyverse)
library(stringr)
library(rjson)
library(ordinal)
library(coin)
sem <- function(x) {sd(x, na.rm=TRUE) / sqrt(length(x))}
ci95 <- function(x) {sem(x) * 1.96}
addnas <- function (x) {if (length(x)==0){
result = NA
} else {result = x}
return(result)
}
####Import data
path_rep <- "D:/Dropbox/School/more adjs/experiment 1b/analysis-all/Trib2011-1-rep"
files_rep <- dir("D:/Dropbox/School/more adjs/experiment 1b/analysis-all/Trib2011-1-rep/",
pattern = "*.json")
NUM_TRIALS <- 50
d.raw.rep <- data.frame()
for (f in files_rep) {
jf <- paste0(path_rep, "anonymized-results/",f)
jd <- fromJSON(file = jf)
id <- data.frame(subid = f,
adj = jd$answers$data$adj,
verb = jd$answers$data$verb,
noun = jd$answers$data$noun,
dir = jd$answers$data$dir,
num_checked = as.numeric(jd$answers$data$num_checked),
quest_order = c(1:NUM_TRIALS),
noun = jd$answers$data$noun,
elapsed_ms = jd$answers$data$elapsed_ms,
elapsed_first_click_ms = jd$answers$data$elapsed_first_click_ms,
workerid = jd$WorkerId,
language = tolower(jd$answers$data$lang),
gender = jd$answers$data$gender,
prototype_status = jd$answers$data$prototype_status,
non_consec = jd$answers$data$non_consecutive,
is_endpoint = jd$answers$data$is_endpoint,
endpoint = as.character(unlist(jd$answers$data$endpoint)),
good_endpoint = jd$answers$data$good_ep,
none_checked = jd$answers$data$none_checked,
screen_size = as.numeric(jd$answers$data$screen_size))
d.raw.rep <- bind_rows(d.raw.rep, id)
}
path_rep <- "D:/Dropbox/School/more adjs/experiment 1b/analysis-all/Trib2011-1-rep"
files_rep <- dir("D:/Dropbox/School/more adjs/experiment 1b/analysis-all/Trib2011-1-rep/anonymized-results",
pattern = "*.json")
NUM_TRIALS <- 50
d.raw.rep <- data.frame()
for (f in files_rep) {
jf <- paste0(path_rep, "anonymized-results/",f)
jd <- fromJSON(file = jf)
id <- data.frame(subid = f,
adj = jd$answers$data$adj,
verb = jd$answers$data$verb,
noun = jd$answers$data$noun,
dir = jd$answers$data$dir,
num_checked = as.numeric(jd$answers$data$num_checked),
quest_order = c(1:NUM_TRIALS),
noun = jd$answers$data$noun,
elapsed_ms = jd$answers$data$elapsed_ms,
elapsed_first_click_ms = jd$answers$data$elapsed_first_click_ms,
workerid = jd$WorkerId,
language = tolower(jd$answers$data$lang),
gender = jd$answers$data$gender,
prototype_status = jd$answers$data$prototype_status,
non_consec = jd$answers$data$non_consecutive,
is_endpoint = jd$answers$data$is_endpoint,
endpoint = as.character(unlist(jd$answers$data$endpoint)),
good_endpoint = jd$answers$data$good_ep,
none_checked = jd$answers$data$none_checked,
screen_size = as.numeric(jd$answers$data$screen_size))
d.raw.rep <- bind_rows(d.raw.rep, id)
}
path_rep <- "D:/Dropbox/School/more adjs/experiment 1b/analysis-all/Trib2011-1-rep/"
files_rep <- dir("D:/Dropbox/School/more adjs/experiment 1b/analysis-all/Trib2011-1-rep/anonymized-results",
pattern = "*.json")
NUM_TRIALS <- 50
d.raw.rep <- data.frame()
for (f in files_rep) {
jf <- paste0(path_rep, "anonymized-results/",f)
jd <- fromJSON(file = jf)
id <- data.frame(subid = f,
adj = jd$answers$data$adj,
verb = jd$answers$data$verb,
noun = jd$answers$data$noun,
dir = jd$answers$data$dir,
num_checked = as.numeric(jd$answers$data$num_checked),
quest_order = c(1:NUM_TRIALS),
noun = jd$answers$data$noun,
elapsed_ms = jd$answers$data$elapsed_ms,
elapsed_first_click_ms = jd$answers$data$elapsed_first_click_ms,
workerid = jd$WorkerId,
language = tolower(jd$answers$data$lang),
gender = jd$answers$data$gender,
prototype_status = jd$answers$data$prototype_status,
non_consec = jd$answers$data$non_consecutive,
is_endpoint = jd$answers$data$is_endpoint,
endpoint = as.character(unlist(jd$answers$data$endpoint)),
good_endpoint = jd$answers$data$good_ep,
none_checked = jd$answers$data$none_checked,
screen_size = as.numeric(jd$answers$data$screen_size))
d.raw.rep <- bind_rows(d.raw.rep, id)
}
path_rev <- "D:/Dropbox/School/more adjs/experiment 1b/Rev-Trib/"
files_rev <- dir("D:/Dropbox/School/more adjs/experiment 1b/Rev-Trib/anonymized-results/",
pattern = "*.json")
NUM_TRIALS <- 50
d.raw.rev <- data.frame()
for (f in files_rev) {
jf <- paste0(path_rev, "anonymized-results/",f)
jd <- fromJSON(file = jf)
id <- data.frame(subid = f,
adj = jd$answers$data$adj,
verb = jd$answers$data$verb,
noun = jd$answers$data$noun,
dir = jd$answers$data$dir,
num_checked = as.numeric(jd$answers$data$num_checked),
quest_order = c(1:NUM_TRIALS),
noun = jd$answers$data$noun,
elapsed_ms = jd$answers$data$elapsed_ms,
elapsed_first_click_ms = jd$answers$data$elapsed_first_click_ms,
workerid = jd$WorkerId,
language = tolower(jd$answers$data$lang),
gender = jd$answers$data$gender,
prototype_status = jd$answers$data$prototype_status,
non_consec = jd$answers$data$non_consecutive,
is_endpoint = jd$answers$data$is_endpoint,
endpoint = as.character(unlist(jd$answers$data$endpoint)),
good_endpoint = jd$answers$data$good_ep,
none_checked = jd$answers$data$none_checked,
screen_size = as.numeric(jd$answers$data$screen_size))
d.raw.rev <- bind_rows(d.raw.rev, id)
}
path_3cond <- "D:/Dropbox/School/more adjs/experiment 1b/3conditions/"
files_3cond <- dir("D:/Dropbox/School/more adjs/experiment 1b/3conditions/anonymized-results/",
pattern = "*.json")
NUM_TRIALS <- 50
d.raw.3cond <- data.frame()
for (f in files_3cond) {
jf <- paste0(path_3cond, "anonymized-results/",f)
jd <- fromJSON(file = jf)
id <- data.frame(subid = f,
condition = jd$answers$data$expt_condition,
number_of_trials = NUM_TRIALS,
number_of_targets = NUM_TARGETS,
adj = jd$answers$data$adj,
verb = jd$answers$data$verb,
noun = jd$answers$data$noun,
dir = as.character(cbind(jd$answers$data$dir)),
num_checked = as.numeric(jd$answers$data$num_checked),
quest_order = c(1:NUM_TRIALS),
elapsed_ms = jd$answers$data$elapsed_ms,
elapsed_first_click_ms = jd$answers$data$elapsed_first_click_ms,
workerid = jd$WorkerId,
language = tolower(jd$answers$data$lang),
gender = jd$answers$data$gender,
prototype_status = jd$answers$data$prototype_status,
non_consec = jd$answers$data$non_consecutive,
is_endpoint = jd$answers$data$is_endpoint,
endpoint = as.character(unlist(jd$answers$data$endpoint)),
good_endpoint = jd$answers$data$good_ep,
none_checked = jd$answers$data$none_checked,
all_checked = jd$answers$data$all_checked,
comments = jd$answers$data$expt_gen,
screen_size = as.numeric(jd$answers$data$screen_size))
d.raw.3cond <- bind_rows(d.raw.3cond, id)
}
View(d.raw.3cond)
install.packages("brms")
